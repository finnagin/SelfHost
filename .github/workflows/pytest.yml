name: "Pytest"

on:
  push:
    branches: [ main ]

jobs:
  analyze:
    name: Analyze
    runs-on: [self-hosted, arax]
    environment: TestEnv
    permissions:
      actions: read
      contents: read
      security-events: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

#     - name: Setup Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: "3.7"

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
    
    - name: Stop any running containers
      continue-on-error: true
      run: sudo docker stop $(sudo docker ps -aq)
    
    - name: Clean up any left over containers
      continue-on-error: true
      run: sudo docker rm $(sudo docker ps -aq)
        
    - name: Clean up any left over images
      continue-on-error: true
      run: sudo docker rmi $(sudo docker images -q)
    
    - run: 'echo "$TEST_SECRET" > test/secret.txt'
      shell: bash
      env:
        TEST_SECRET: ${{secrets.TEST_SECRET}}
    
    - name: Build docker image 
      run: sudo docker build --no-cache=true --rm -t rtx:test DockerBuild/ -f DockerBuild/Dockerfile
    
    - name: Run docker container
      run: sudo docker run -d -it --name rtx_test -p 80:80 -v ${PWD}/test/secret.txt:/mnt/data/orangeboard/production/SelfHost/test/secret.txt rtx:test
    
    - name: Run tests with pytest
      run: sudo docker exec rtx_test bash -c "cd /mnt/data/orangeboard/production/SelfHost/test/ && pytest -v -k 'not test_fail'"
    
    - name: Remove and delete all docker containers & images
      continue-on-error: true
      run: |
        sudo docker stop $(sudo docker ps -aq)
        sudo docker rm $(sudo docker ps -aq)
        sudo docker rmi $(sudo docker images -q)
